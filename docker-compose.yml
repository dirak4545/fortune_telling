version: '3.8'

services:
  nginx:
    container_name: fortune_nginx
    image : nginx:latest
    ports:
      - "80:80"
#      - "443:443" # HTTPS
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
#      - ./nginx/ssl:/etc/nginx/ssl  # SSL 인증서 (필요한 경우)
    depends_on:
      - app
    networks:
      - fortune-network
  app:
    container_name: fortune_telling
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:mysql://db:3306/fortune_telling?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      - DB_USERNAME=${DB_USERNAME:-fortune_user}
      - DB_PASSWORD=${DB_PASSWORD:-fortune_password}
      - CHATGPT_API_KEY=${CHATGPT_API_KEY:-your_api_key}
    depends_on:
      - db
    networks:
      - fortune-network

  db:
    container_name: fortune-mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=fortune_telling
      - MYSQL_USER=${DB_USERNAME:-fortune_user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-fortune_password}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-rootpassword}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - fortune-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - fortune-network

networks:
  fortune-network:
    driver: bridge

volumes:
  mysql-data:
  jenkins-data: