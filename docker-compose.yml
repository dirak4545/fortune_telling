version: '3.8'

services:
  nginx:
    container_name: fortune_nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"  # HTTPS 포트 활성화
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl  # SSL 인증서 볼륨
      - ./certbot/conf:/etc/letsencrypt  # Certbot 인증서 저장 위치
      - ./certbot/www:/var/www/certbot  # Certbot 검증 파일 위치
    depends_on:
      - app
    networks:
      - fortune-network
      -
#  app:
#    container_name: fortune_telling
#    build: .
#    ports:
#      - "8080:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=prod
#      - DB_URL=jdbc:mysql://db:3306/fortune_telling?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
#      - DB_USERNAME=${DB_USERNAME:-fortune_user}
#      - DB_PASSWORD=${DB_PASSWORD:-fortune_password}
#      - CHATGPT_API_KEY=${CHATGPT_API_KEY:-your_api_key}
#    depends_on:
#      - db
#    networks:
#      - fortune-network

# 로컬 docker-compose 를 참조하지 말고 docker hub를 활용해서 도커 최신 이미지 접근
  app:
    container_name: fortune_telling
    image: ${DOCKERHUB_USERNAME}/fortune-telling:latest  # Dockerfile을 직접 빌드하지 않고 이미지 사용
    restart: always  # 컨테이너 자동 재시작 설정 추가
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:mysql://db:3306/fortune_telling?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
      - DB_USERNAME=${DB_USERNAME:-fortune_user}
      - DB_PASSWORD=${DB_PASSWORD:-fortune_password}
      - CHATGPT_API_KEY=${CHATGPT_API_KEY:-your_api_key}
    depends_on:
      - db
    networks:
      - fortune-network

  db:
    container_name: fortune-mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=fortune_telling
      - MYSQL_USER=${DB_USERNAME:-fortune_user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-fortune_password}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-rootpassword}
        # 중요: MySQL이 모든 호스트의 연결을 허용하도록 설정
      - MYSQL_ROOT_HOST=%
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - fortune-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    ports:
      - "8090:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - fortune-network

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - fortune-network
    depends_on:
      - nginx

networks:
  fortune-network:
    driver: bridge

volumes:
  mysql-data:
  jenkins-data: