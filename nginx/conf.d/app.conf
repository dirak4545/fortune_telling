server {
    listen 80;
    server_name yourdomain.com;  # 실제 도메인 이름으로 변경하세요

    # Certbot 인증 경로
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # HTTP에서 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name yourdomain.com;  # 실제 도메인 이름으로 변경하세요

    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;

    # SSL 설정 최적화
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 로그 설정
    access_log /var/log/nginx/app_access.log;
    error_log /var/log/nginx/app_error.log;

    # API 요청을 Spring Boot 앱으로 전달
    location /api/ {
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Swagger UI 접근 설정
    location /swagger-ui.html {
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Swagger 리소스 접근
    location ~ ^/(swagger-ui|api-docs|v3/api-docs)/ {
        proxy_pass http://app:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # 기본 라우트
    location / {
        return 404;
        # 프론트엔드가 있다면 아래 주석을 해제하세요
        # root /usr/share/nginx/html;
        # index index.html;
        # try_files $uri $uri/ /index.html;
    }
}