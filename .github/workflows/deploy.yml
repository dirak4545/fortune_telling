name: Deploy to Server

# 언제 실행될지 정의 (main 브랜치에 push될 때)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - uses: actions/checkout@v3

      # 2. Java 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # 3. 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. 프로젝트 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fortune-telling:latest

      # 7. SSH로 서버 접속 후 배포
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 기존 컨테이너 중지 및 제거
            docker stop fortune-app || true
            docker rm fortune-app || true
            
            # 새 이미지 다운로드
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/fortune-telling:latest
            
            # .env 파일 생성 (환경 변수 설정)
            echo "DB_URL=${{ secrets.DB_URL }}" > .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "CHATGPT_API_KEY=${{ secrets.CHATGPT_API_KEY }}" >> .env
            
            # 새 컨테이너 실행
            docker run -d \
              --name fortune-app \
              -p 8080:8080 \
              --env-file .env \
              ${{ secrets.DOCKERHUB_USERNAME }}/fortune-telling:latest
            
            # 사용하지 않는 이미지 정리
            docker image prune -f
